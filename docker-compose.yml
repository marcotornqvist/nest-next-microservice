services:
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - 5432:5432
    volumes:
      - docker-nest-postgres:/var/lib/postgresql/data
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
  todos:
    container_name: todos
    build:
      context: ./backend
      dockerfile: ./apps/todos/Dockerfile
      target: development
    command: npm run start:dev
    env_file:
      - ./backend/apps/todos/.env
    volumes:
      - ./backend:/usr/src/app
      - /backend/usr/src/app/node_modules
    ports:
      - 4000:4000
    depends_on:
      - postgres
      - rabbitmq
      - auth
      - notification
      # - redis
  notification:
    container_name: notification
    build:
      context: ./backend
      dockerfile: ./apps/notification/Dockerfile
      target: development
    command: npm run start:dev notification
    env_file:
      - ./backend/apps/notification/.env
    volumes:
      - ./backend:/usr/src/app
      - /backend/usr/src/app/node_modules
    depends_on:
      - postgres
      - rabbitmq
      - auth
  auth:
    container_name: auth
    build:
      context: ./backend
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./backend/apps/auth/.env
    volumes:
      - ./backend:/usr/src/app
      - /backend/usr/src/app/node_modules
    depends_on:
      - postgres
      - rabbitmq
  frontend:
    container_name: frontend
    build: ./frontend
    restart: always
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - 3000:3000
    stdin_open: true
    tty: true
    depends_on:
      - postgres
      - rabbitmq
      - todos
      - notification
      - auth
  # redis:
  #   container_name: redis
  #   image: redis:5
  #   networks:
  #     - webnet
volumes:
  docker-nest-postgres:
  redis:
    driver: local
  # - redis
  # - auth
# ---------------------------------------------------
# Old version
# ---------------------------------------------------
# networks:
#   rabbitmq_network:
#     driver: bridge
# services:
#   todos:
#     build:
#       context: .
#       dockerfile: ./apps/todos/Dockerfile
#       target: development
#     command: npm run start:dev
#     env_file:
#       - .env
#       - ./apps/todos/.env
#     depends_on:
#       - postgres
#       # - billing
#       # - auth
#       # - rabbitmq
#     volumes:
#       - .:/usr/src/app
#       - /usr/src/app/node_modules
#     ports:
#       - '4000:4000'
#   postgres:
#     image: postgres:latest
#     container_name: postgres
#     restart: always
#     env_file:
#       - .env
#     # environment:
#     #   - POSTGRES_USER=postgres
#     #   - POSTGRES_PASSWORD=test123
#     #   - POSTGRES_DB=nest-todo-app
#     volumes:
#       - db:/var/lib/postgresql/data
#     ports:
#       - '5432:5432'

# volumes:
#   db:
#     driver: local
